org: artemsopa
app: aws-image-uploader
service: aws-image-uploader
frameworkVersion: "3"

plugins:
  - serverless-webpack
  - serverless-offline

provider:
  name: aws
  runtime: nodejs14.x
  region: eu-central-1
  stage: ${opt:stage, 'dev'}
  apiGateway:
    binaryMediaTypes:
      - 'multipart/form-data'
  environment:
    TABLE_NAME: ${self:custom.tableName}
    BUCKET_NAME: ${self:custom.bucketName}
    SIGNING_KEY: 1239281783hshjdsehqi9
    TOKEN_TTL: 1800000
    PASSWORD_SALT: 3
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:PutObject
        - s3:GetObject
        - s3:DeleteObject
      Resource: { "Fn::Join": ["", ["arn:aws:s3:::${self:custom.bucketName}", "/*" ] ] }
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - "Fn::GetAtt": [UploaderTable, Arn]

custom:
  tableName: img-upldr-${self:provider.stage}
  bucketName: img-upldr-${self:provider.stage}

functions:
  signIn:
    handler: ./src/index.signIn
    events:
      - http:
          path: /auth/sign-in
          method: post
  signUp:
    handler: ./src/index.signUp
    events:
      - http:
          path: /auth/sign-up
          method: post
  getAllImages:
    handler: ./src/index.getAllImages
    events:
      - http:
          path: /bucket
          method: get
  uploadImage:
    handler: ./src/index.uploadImage
    events:
      - http:
          path: /bucket
          method: post
  deleteImage:
    handler: ./src/index.deleteImage
    events:
      - http:
          path: /bucket/{id}
          method: delete
          request:
            parameters:
              paths:
                id: true

resources:
  Resources:
    UploaderBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.bucketName}
        CorsConfiguration:
          CorsRules:
            - AllowedOrigins:
                - '*'
              AllowedHeaders:
                - '*'
              AllowedMethods:
                - GET
                - POST
                - DELETE
              MaxAge: 3000
    UploaderTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.tableName}
        AttributeDefinitions:
          - AttributeName: PK
            AttributeType: S
          - AttributeName: SK
            AttributeType: S
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: PK
            KeyType: HASH
          - AttributeName: SK
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: UserEmail
            KeySchema:
              - AttributeName: email
                KeyType: HASH
            Projection:
              ProjectionType: "ALL"
        BillingMode: PAY_PER_REQUEST
